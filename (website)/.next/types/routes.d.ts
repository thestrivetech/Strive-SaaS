// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/assessment" | "/chatbot-sai" | "/contact" | "/cookies" | "/onboarding" | "/portfolio" | "/privacy" | "/request" | "/resources" | "/solutions" | "/solutions/ai-automation" | "/solutions/blockchain" | "/solutions/business-intelligence" | "/solutions/case-studies/healthcare" | "/solutions/computer-vision" | "/solutions/data-analytics" | "/solutions/education" | "/solutions/financial" | "/solutions/healthcare" | "/solutions/manufacturing" | "/solutions/retail" | "/solutions/security-compliance" | "/solutions/smart-business" | "/solutions/technologies/ai-ml" | "/solutions/technologies/computer-vision" | "/solutions/technologies/nlp" | "/solutions/technology" | "/terms"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = "/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/[[...path]]": { "path"?: string[]; }
  "/about": {}
  "/assessment": {}
  "/chatbot-sai": {}
  "/contact": {}
  "/cookies": {}
  "/onboarding": {}
  "/portfolio": {}
  "/privacy": {}
  "/request": {}
  "/resources": {}
  "/solutions": {}
  "/solutions/ai-automation": {}
  "/solutions/blockchain": {}
  "/solutions/business-intelligence": {}
  "/solutions/case-studies/healthcare": {}
  "/solutions/computer-vision": {}
  "/solutions/data-analytics": {}
  "/solutions/education": {}
  "/solutions/financial": {}
  "/solutions/healthcare": {}
  "/solutions/manufacturing": {}
  "/solutions/retail": {}
  "/solutions/security-compliance": {}
  "/solutions/smart-business": {}
  "/solutions/technologies/ai-ml": {}
  "/solutions/technologies/computer-vision": {}
  "/solutions/technologies/nlp": {}
  "/solutions/technology": {}
  "/terms": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
