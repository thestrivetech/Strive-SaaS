

// ============================================================================
// TOOL MARKETPLACE MODELS
// ============================================================================

/// Marketplace Tools - Shared catalog (NO organizationId)
model marketplace_tools {
  id              String      @id @default(cuid())
  name            String
  description     String      @db.Text
  category        ToolCategory
  tier            ToolTier
  price           Int         // Price in cents
  is_active       Boolean     @default(true)

  // Features and capabilities
  features        String[]    @default([])
  capabilities    String[]    @default([])
  integrations    String[]    @default([])

  // Usage tracking
  purchase_count  Int         @default(0)
  rating          Decimal?    @db.Decimal(3, 2) // 0.00 to 5.00

  // Metadata
  icon            String?     // Icon name or image URL
  tags            String[]    @default([])

  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt

  // Relations
  purchases       tool_purchases[]
  reviews         tool_reviews[]
  bundles         bundle_tools[]

  @@index([category])
  @@index([tier])
  @@index([is_active])
  @@map("marketplace_tools")
}

/// Tool Purchases - Multi-tenant (WITH organizationId + RLS)
model tool_purchases {
  id                 String            @id @default(cuid())
  tool_id            String
  tool               marketplace_tools @relation(fields: [tool_id], references: [id], onDelete: Cascade)

  // Purchase details
  price_at_purchase  Int               // Price when purchased (in cents)
  purchase_date      DateTime          @default(now())
  status             PurchaseStatus    @default(ACTIVE)

  // Usage tracking
  last_used          DateTime?
  usage_count        Int               @default(0)

  // Multi-tenant isolation
  organization_id    String
  organization       organizations     @relation(fields: [organization_id], references: [id], onDelete: Cascade)

  // Relations
  purchased_by       String
  purchaser          users             @relation("ToolPurchases", fields: [purchased_by], references: [id], onDelete: Cascade)

  @@unique([tool_id, organization_id])
  @@index([organization_id])
  @@index([purchased_by])
  @@index([status])
  @@map("tool_purchases")
}

/// Tool Bundles - Shared catalog (NO organizationId)
model tool_bundles {
  id              String      @id @default(cuid())
  name            String
  description     String      @db.Text
  bundle_type     BundleType
  original_price  Int         // Sum of individual tool prices
  bundle_price    Int         // Discounted bundle price
  discount        Decimal     @db.Decimal(5, 2) // Discount percentage

  // Bundle metadata
  is_active       Boolean     @default(true)
  is_popular      Boolean     @default(false)

  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt

  // Relations
  tools           bundle_tools[]
  purchases       bundle_purchases[]

  @@index([bundle_type])
  @@index([is_active])
  @@map("tool_bundles")
}

/// Bundle Tools - Junction table for bundles and tools
model bundle_tools {
  id        String            @id @default(cuid())
  bundle_id String
  bundle    tool_bundles      @relation(fields: [bundle_id], references: [id], onDelete: Cascade)
  tool_id   String
  tool      marketplace_tools @relation(fields: [tool_id], references: [id], onDelete: Cascade)

  @@unique([bundle_id, tool_id])
  @@map("bundle_tools")
}

/// Bundle Purchases - Multi-tenant (WITH organizationId + RLS)
model bundle_purchases {
  id                 String        @id @default(cuid())
  bundle_id          String
  bundle             tool_bundles  @relation(fields: [bundle_id], references: [id], onDelete: Cascade)

  price_at_purchase  Int           // Bundle price when purchased
  purchase_date      DateTime      @default(now())
  status             PurchaseStatus @default(ACTIVE)

  // Multi-tenant isolation
  organization_id    String
  organization       organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade)

  // Relations
  purchased_by       String
  purchaser          users         @relation("BundlePurchases", fields: [purchased_by], references: [id], onDelete: Cascade)

  @@index([organization_id])
  @@index([purchased_by])
  @@index([status])
  @@map("bundle_purchases")
}

/// Tool Reviews - Multi-tenant (WITH organizationId + RLS)
model tool_reviews {
  id              String            @id @default(cuid())
  tool_id         String
  tool            marketplace_tools @relation(fields: [tool_id], references: [id], onDelete: Cascade)

  rating          Int               // 1-5 stars
  review          String?           @db.Text

  created_at      DateTime          @default(now())

  // Multi-tenant isolation
  organization_id String
  organization    organizations     @relation(fields: [organization_id], references: [id], onDelete: Cascade)

  // Relations
  reviewer_id     String
  reviewer        users             @relation("ToolReviews", fields: [reviewer_id], references: [id], onDelete: Cascade)

  @@unique([tool_id, reviewer_id])
  @@index([tool_id])
  @@index([organization_id])
  @@map("tool_reviews")
}

/// Shopping Carts - Multi-tenant (WITH organizationId + RLS)
model shopping_carts {
  id              String        @id @default(cuid())

  // Cart contents (stored as JSON for flexibility)
  tools           Json          @default("[]") @db.JsonB // Array of tool IDs
  bundles         Json          @default("[]") @db.JsonB // Array of bundle IDs
  total_price     Int           @default(0)   // Total price in cents

  // Cart metadata
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt

  // Multi-tenant isolation
  organization_id String
  organization    organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade)

  // Relations
  user_id         String        @unique
  user            users         @relation("ShoppingCart", fields: [user_id], references: [id], onDelete: Cascade)

  @@index([organization_id])
  @@map("shopping_carts")
}
