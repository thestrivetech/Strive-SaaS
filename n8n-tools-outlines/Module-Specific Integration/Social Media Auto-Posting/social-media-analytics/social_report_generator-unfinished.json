{
  "name": "social-report-generator-v1",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [{"field": "cronExpression", "expression": "0 9 * * MON"}]
        }
      },
      "id": "weekly-trigger",
      "name": "Every Monday 9 AM",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [250, 400]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "={{ $env.SUPABASE_URL }}/rest/v1/organizations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {"name": "apikey", "value": "={{ $env.SUPABASE_SERVICE_KEY }}"},
            {"name": "Authorization", "value": "=Bearer {{ $env.SUPABASE_SERVICE_KEY }}"}
          ]
        },
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {"name": "select", "value": "id,name"}
          ]
        }
      },
      "id": "fetch-orgs",
      "name": "Fetch Organizations",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [450, 400]
    },
    {
      "parameters": {
        "jsCode": "// Generate report for each organization\nconst organizations = $input.all().map(i => i.json).flat();\n\nconst reports = organizations.map(org => ({\n  json: {\n    organization_id: org.id,\n    organization_name: org.name,\n    report_period: {\n      start: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n      end: new Date().toISOString().split('T')[0]\n    }\n  }\n}));\n\nreturn reports;"
      },
      "id": "prepare-reports",
      "name": "Prepare Report Configs",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 400]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.N8N_WEBHOOK_BASE_URL }}/social-media-dashboard",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [{"name": "Content-Type", "value": "application/json"}]
        },
        "sendBody": true,
        "contentType": "application/json",
        "body": "={{ JSON.stringify({\n  organization_id: $json.organization_id,\n  date_range: $json.report_period,\n  include_hashtags: true,\n  include_best_posts: true,\n  include_posting_times: true\n}) }}"
      },
      "id": "fetch-analytics",
      "name": "Fetch Analytics Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [850, 400]
    },
    {
      "parameters": {
        "jsCode": "// ===============================================\n// GENERATE COMPREHENSIVE WEEKLY REPORT\n// ===============================================\n\nconst config = $('Prepare Report Configs').item.json;\nconst analyticsResponse = $input.first().json;\nconst data = analyticsResponse.data;\n\n// Calculate week-over-week changes\nfunction calculateChange(current, previous) {\n  if (!previous || previous === 0) return 'N/A';\n  const change = ((current - previous) / previous * 100).toFixed(1);\n  return change > 0 ? `+${change}%` : `${change}%`;\n}\n\n// Generate executive summary\nconst executiveSummary = `\n📊 WEEKLY SOCIAL MEDIA REPORT\n${config.organization_name}\nPeriod: ${config.report_period.start} to ${config.report_period.end}\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n✨ KEY HIGHLIGHTS\n\n📈 Total Posts: ${data.summary.total_posts}\n❤️ Avg Engagement Rate: ${data.summary.avg_engagement_rate}%\n👁️ Total Reach: ${(data.summary.total_reach || 0).toLocaleString()}\n🚀 Viral Posts: ${data.summary.viral_posts}\n⭐ Excellent Posts: ${data.summary.excellent_posts}\n\n📊 TREND: ${data.trends.engagement_rate_trend}\n`;\n\n// Platform performance breakdown\nconst platformSection = `\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📱 PLATFORM PERFORMANCE\n\n${Object.entries(data.platform_performance).map(([platform, stats]) => `\n${platform.toUpperCase()}\n  • Posts: ${stats.posts_count}\n  • Engagement: ${stats.avg_engagement_rate}%\n  • Reach: ${(stats.total_reach || 0).toLocaleString()}\n  • Total Likes: ${stats.total_likes}\n  • Total Comments: ${stats.total_comments}\n  • Total Shares: ${stats.total_shares}\n`).join('\\n')}\n`;\n\n// Best performing posts\nconst bestPostsSection = `\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n🏆 TOP PERFORMING POSTS\n\n${data.best_posts.slice(0, 5).map((post, i) => `\n${i + 1}. ${post.platform.toUpperCase()} - ${post.performance_tier}\n   \"${post.content_preview}\"\n   ${post.likes} likes • ${post.comments} comments • ${post.shares} shares\n   Engagement Rate: ${post.engagement_rate}%\n   🔗 ${post.post_url}\n`).join('\\n')}\n`;\n\n// Top hashtags\nconst hashtagSection = `\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n#️⃣ TOP PERFORMING HASHTAGS\n\n${data.top_hashtags.slice(0, 10).map((tag, i) => \n  `${i + 1}. ${tag.hashtag} - ${tag.avg_engagement}% avg engagement (used ${tag.times_used}x)${tag.is_trending ? ' 🔥 TRENDING' : ''}`\n).join('\\n')}\n`;\n\n// Content insights\nconst contentSection = `\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n💡 CONTENT INSIGHTS\n\n📊 Best Content Type: ${data.content_type_performance ? \n  Object.entries(data.content_type_performance)\n    .sort((a, b) => parseFloat(b[1].avg_engagement_rate) - parseFloat(a[1].avg_engagement_rate))[0][0]\n  : 'N/A'}\n\n⏰ Best Posting Time: ${data.best_posting_time || 'Not enough data'}\n\n📈 Posting Frequency: ${data.trends.posts_per_week} posts/week\n`;\n\n// Recommendations\nconst recommendationsSection = `\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n💡 RECOMMENDATIONS FOR NEXT WEEK\n\n${data.recommendations.map((rec, i) => `\n${i + 1}. [${rec.priority.toUpperCase()}] ${rec.message}\n`).join('\\n')}\n`;\n\n// Detailed metrics table (for email HTML version)\nconst metricsTable = {\n  summary: data.summary,\n  platforms: data.platform_performance,\n  best_posts: data.best_posts.slice(0, 5),\n  hashtags: data.top_hashtags.slice(0, 10),\n  recommendations: data.recommendations\n};\n\n// Generate HTML report\nconst htmlReport = generateHTMLReport(config, data);\n\nreturn [{\n  json: {\n    organization_id: config.organization_id,\n    organization_name: config.organization_name,\n    report_period: config.report_period,\n    report_text: executiveSummary + platformSection + bestPostsSection + hashtagSection + contentSection + recommendationsSection,\n    report_html: htmlReport,\n    metrics: metricsTable,\n    generated_at: new Date().toISOString()\n  }\n}];\n\nfunction generateHTMLReport(config, data) {\n  return `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Weekly Social Media Report</title>\n  <style>\n    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 0; padding: 20px; background: #f5f5f5; }\n    .container { max-width: 800px; margin: 0 auto; background: white; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }\n    .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; border-radius: 8px 8px 0 0; }\n    .header h1 { margin: 0 0 10px 0; font-size: 28px; }\n    .header p { margin: 0; opacity: 0.9; }\n    .section { padding: 30px; border-bottom: 1px solid #eee; }\n    .section:last-child { border-bottom: none; }\n    .metric-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 20px; margin: 20px 0; }\n    .metric-card { background: #f8f9fa; padding: 20px; border-radius: 8px; text-align: center; }\n    .metric-value { font-size: 32px; font-weight: bold; color: #667eea; margin: 10px 0; }\n    .metric-label { font-size: 14px; color: #666; }\n    .trend-up { color: #10b981; }\n    .trend-down { color: #ef4444; }\n    .platform-row { display: flex; justify-content: space-between; padding: 15px; background: #f8f9fa; margin: 10px 0; border-radius: 6px; }\n    .post-card { background: #f8f9fa; padding: 15px; margin: 10px 0; border-radius: 6px; border-left: 4px solid #667eea; }\n    .post-meta { color: #666; font-size: 14px; margin-top: 10px; }\n    .hashtag-badge { display: inline-block; background: #667eea; color: white; padding: 5px 12px; border-radius: 20px; margin: 5px; font-size: 14px; }\n    .recommendation { background: #fef3c7; padding: 15px; margin: 10px 0; border-radius: 6px; border-left: 4px solid #f59e0b; }\n    .priority-high { border-left-color: #ef4444; }\n    .priority-medium { border-left-color: #f59e0b; }\n    .priority-low { border-left-color: #10b981; }\n    h2 { color: #1f2937; margin-top: 0; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <h1>📊 Weekly Social Media Report</h1>\n      <p>${config.organization_name}</p>\n      <p>Period: ${config.report_period.start} to ${config.report_period.end}</p>\n    </div>\n    \n    <div class=\"section\">\n      <h2>✨ Key Metrics</h2>\n      <div class=\"metric-grid\">\n        <div class=\"metric-card\">\n          <div class=\"metric-label\">Total Posts</div>\n          <div class=\"metric-value\">${data.summary.total_posts}</div>\n        </div>\n        <div class=\"metric-card\">\n          <div class=\"metric-label\">Engagement Rate</div>\n          <div class=\"metric-value\">${data.summary.avg_engagement_rate}%</div>\n          <div class=\"trend-${data.trends.engagement_rate_trend.startsWith('+') ? 'up' : 'down'}\">\n            ${data.trends.engagement_rate_trend}\n          </div>\n        </div>\n        <div class=\"metric-card\">\n          <div class=\"metric-label\">Total Reach</div>\n          <div class=\"metric-value\">${((data.summary.total_reach || 0) / 1000).toFixed(1)}K</div>\n        </div>\n        <div class=\"metric-card\">\n          <div class=\"metric-label\">Viral Posts</div>\n          <div class=\"metric-value\">🚀 ${data.summary.viral_posts}</div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"section\">\n      <h2>📱 Platform Performance</h2>\n      ${Object.entries(data.platform_performance).map(([platform, stats]) => `\n        <div class=\"platform-row\">\n          <div>\n            <strong>${platform.toUpperCase()}</strong><br>\n            <span style=\"color: #666;\">${stats.posts_count} posts</span>\n          </div>\n          <div style=\"text-align: right;\">\n            <strong>${stats.avg_engagement_rate}%</strong> engagement<br>\n            <span style=\"color: #666;\">${(stats.total_reach || 0).toLocaleString()} reach</span>\n          </div>\n        </div>\n      `).join('')}\n    </div>\n    \n    <div class=\"section\">\n      <h2>🏆 Top Performing Posts</h2>\n      ${data.best_posts.slice(0, 5).map((post, i) => `\n        <div class=\"post-card\">\n          <strong>${i + 1}. ${post.platform.toUpperCase()}</strong> \n          <span style=\"background: #10b981; color: white; padding: 2px 8px; border-radius: 4px; font-size: 12px;\">\n            ${post.performance_tier}\n          </span>\n          <p>${post.content_preview}</p>\n          <div class=\"post-meta\">\n            ❤️ ${post.likes} • 💬 ${post.comments} • 🔄 ${post.shares} • \n            <strong>${post.engagement_rate}% engagement</strong>\n          </div>\n        </div>\n      `).join('')}\n    </div>\n    \n    <div class=\"section\">\n      <h2>#️⃣ Top Hashtags</h2>\n      ${data.top_hashtags.slice(0, 10).map(tag => `\n        <span class=\"hashtag-badge\">\n          ${tag.hashtag} ${tag.is_trending ? '🔥' : ''} - ${tag.avg_engagement}%\n        </span>\n      `).join('')}\n    </div>\n    \n    <div class=\"section\">\n      <h2>💡 Recommendations</h2>\n      ${data.recommendations.map(rec => `\n        <div class=\"recommendation priority-${rec.priority}\">\n          <strong>[${rec.priority.toUpperCase()}]</strong> ${rec.message}\n        </div>\n      `).join('')}\n    </div>\n    \n    <div class=\"section\" style=\"text-align: center; color: #666;\">\n      <p>Generated on ${new Date().toLocaleDateString()} at ${new Date().toLocaleTimeString()}</p>\n      <p>Powered by Strive Tech Campaign ROI Tracker</p>\n    </div>\n  </div>\n</body>\n</html>\n  `;\n}"
      },
      "id": "generate-report",
      "name": "Generate Report",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1050, 400]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env.SUPABASE_URL }}/rest/v1/workflow_executions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {"name": "apikey", "value": "={{ $env.SUPABASE_SERVICE_KEY }}"},
            {"name": "Authorization", "value": "=Bearer {{ $env.SUPABASE_SERVICE_KEY }}"},
            {"name": "Content-Type", "value": "application/json"}
          ]
        },
        "sendBody": true,
        "contentType": "application/json",
        "body": "={{ JSON.stringify({\n  workflow_name: 'social-report-generator-v1',\n  execution_id: $execution.id,\n  trigger_type: 'schedule',\n  status: 'success',\n  output_data: {\n    organizations_processed: $input.all().length,\n    reports_generated: $input.all().length\n  },\n  completed_at: new Date().toISOString()\n}) }}"
      },
      "id": "log-execution",
      "name": "Log Execution",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1250, 400]
    }
  ],
  "connections": {
    "Every Monday 9 AM": {
      "main": [[{"node": "Fetch Organizations", "type": "main", "index": 0}]]
    },
    "Fetch Organizations": {
      "main": [[{"node": "Prepare Report Configs", "type": "main", "index": 0}]]
    },
    "Prepare Report Configs": {
      "main": [[{"node": "Fetch Analytics Data", "type": "main", "index": 0}]]
    },
    "Fetch Analytics Data": {
      "main": [[{"node": "Generate Report", "type": "main", "index": 0}]]
    },
    "Generate Report": {
      "main": [[{"node": "Log Execution", "type": "main", "index": 0}]]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}